 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var UAParser = require('ua-parser-js');


if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    })

app.route('/api/whoami')
    .get(function(req, res) {
      var stuff = {
        "ipaddress":"",
        "language":"",
        "software":""         
      };
      var ip = req.headers["x-forwarded-for"].split(",")[0];
      var lang = req.headers["accept-language"].split(",")[0];
      var soft;
  /*
      var parser = new UAParser();
      var ua = req.headers['user-agent'];     // user-agent header from an HTTP request 
      console.log(parser.setUA(ua).getResult());
		  //res.end(ip);
      res.end(JSON.stringify(parser.setUA(ua).getResult()));
  */
      var UAArr = [];
      var UAStr = JSON.stringify(req.headers["user-agent"]);
      var hit = false;
      for (let i = 0; i < UAStr.length; i++) {
        if (UAStr[i] == "(" && hit === false) {
          hit = true;
          continue;
        } else if (UAStr[i] == ")" && hit === true) {
          break;
        }  
        if (hit === true) {
          UAArr.push(UAStr[i]);
        }    
      }
      soft = UAArr.join("");
      stuff["ipaddress"] = ip;
      stuff.software = soft;
      stuff.language = lang;
  
      res.end(JSON.stringify(stuff));
    })


//api/whoami/
// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

